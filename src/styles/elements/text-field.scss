.text-field {
  margin-bottom: 1rem;
  position: relative;

  &__label {
    display: block;
    margin-bottom: 0.25rem;
  }

  &__input {
    display: block;
    width: 100%;
    color: var(--color-base-d3);
    padding: 0.375rem 0.75rem;
    font-family: inherit;
    font-size: 1rem;
    font-weight: 400;
    line-height: 1.5;
    background-color: var(--color-base-l4);
    background-clip: padding-box;
    border: 1px solid var(--color-base-l3);
    border-radius: 0.5rem;
    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;

    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;

    &[type='search']::-webkit-search-decoration,
    &[type='search']::-webkit-search-cancel-button,
    &[type='search']::-webkit-search-results-button,
    &[type='search']::-webkit-search-results-decoration {
      -webkit-appearance: none;
    }

    &::placeholder {
      color: var(--color-base-d1);
    }

    &:focus {
      color: #212529;
      border-color: #bdbdbd;
      outline: 0;
    }

    &:disabled, &[readonly] {
      opacity: 0.4;
    }
  }


  /*
    в Firefox не будет работать, если не заморочиться с включением поддержки свойства где-то в потаённых настройках
  */

  &:has(.text-field__icon-before, .text-field__icon-before__filled) {
    .text-field__input, .text-field__label {
      padding-left: 2.5rem;
    }
  }
  &:has(.text-field__icon-after) {
    .text-field__input, .text-field__label {
      padding-right: 2rem;
    }
  }


  &__icon {
    position: absolute;
    display: flex;
    align-items: center;
    top: 0;
    bottom: 0;
    right: 0.4rem;
    //width: 1rem;
    height: 100%;
    color: var(--color-base-d2);
    transition: color 0.15s ease-in-out;

    img, svg {
      max-width: 1rem;
      max-height: 1rem;
    }

    &:hover {
      color: var(--color-base-d3);
    }

    &-after {
      right: 1rem;
    }

    &-before {
      left: 1rem;

      &__filled {
        left: 0;
        right: 0;
        justify-content: center;
        align-content: center;
        background: var(--color-link);
        width: 2rem;
        border-radius: 4px 0 0 4px;
      }
    }
  }
}

/*
 with floating label
*/

.text-field_floating {
  position: relative;

  .text-field__label {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    padding: 1rem .75rem;
    pointer-events: none;
    border: 1px solid transparent;
    transform-origin: 0 0;
    transition: color .15s ease-in-out, transform .15s ease-in-out;
  }

  .text-field__input {
    border: none;
    height: calc(3.5rem + 2px);
    line-height: 1.25;
    padding: 1rem 0.75rem;

    &:focus {
      outline: 0;
      box-shadow: none;
    }

    &::placeholder {
      color: transparent;
    }
    &::-moz-placeholder {
      color: transparent;
    }

    &:focus, &:not(:placeholder-shown) {
      padding-top: 1.625rem;
      padding-bottom: .625rem;
    }

    &:focus~.text-field__label, &:not(:placeholder-shown)~.text-field__label {
      transform: scale(.85) translateY(-.75rem) translateX(.15rem);
      color: var(--color-link);
    }
  }
}

/*
 validation
*/

.text-field__wrapper {
  margin-bottom: 1.25rem;

  .text-field {
    margin-bottom: 0;
  }
}

@mixin icon {
  padding-right: 2.25rem;
  background-repeat: no-repeat;
  background-position: right 0.5625rem center;
  background-size: 1.125rem 1.125rem;
}

@mixin invalid {
  border-color: var(--color-negative-d2);
}

@mixin valid {
  border-color: var(--color-positive-d2);
}

@mixin invalid-icon {
  background-image: url(../../assets/icons/invalid.svg);
  @include icon;
  @include invalid;
}

@mixin valid-icon {
  background-image: url(../../assets/icons/valid.svg);
  @include icon;
  @include valid;
}

.text-field {
  &__input {
    &_invalid, &.ng-invalid:not(.ng-untouched) {
      @include invalid;
    }

    &_valid, &.ng-valid:not(.ng-untouched) {
      @include valid;
    }

    &_invalid-icon &.ng-invalid:not(.ng-untouched) {
      @include invalid-icon;
    }

    &_valid-icon &.ng-valid:not(.ng-untouched) {
      @include valid-icon;
    }

    &_invalid-icon {
      @include invalid-icon;
    }

    &_valid-icon {
      @include valid-icon;
    }
  }

  &_floating {
    .text-field__input {
      &_invalid {
        &~.text-field__label,
        &:focus~.text-field__label,
        &:not(:placeholder-shown)~.text-field__label,
        &:focus {
          color: var(--color-negative-d2);
        }

        &:focus, :not(:placeholder-shown) {
          color: var(--color-negative-d2);
          @include invalid;
        }
      }

      &_valid {
        &~.text-field__label,
        &:focus~.text-field__label,
        &:not(:placeholder-shown)~.text-field__label {
          color: var(--color-positive-d2);
        }

        &:focus, :not(:placeholder-shown) {
          color: var(--color-positive-d2);
          @include valid;
        }
      }
    }
  }

  &__message {
    display: none;
    width: 100%;
    margin-top: .25rem;
    font-size: .875rem;
    color: var(--color-negative-d2);

    &_valid {
      color: var(--color-positive-d2);
    }

    &_invalid, &_valid {
      display: block;
    }
  }
}
